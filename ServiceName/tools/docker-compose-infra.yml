version: '3.5'
networks:
  servicesnet:
    name: servicesnet
    external: false
volumes:
  mongodb:
  redis:
  consul:
  mongo_data:
    driver: local
  data_containers:
    driver: local

services:
  mongodb:
    image: mongo
    container_name: mongodb
    hostname: mongodb
    restart: always
    networks:
      - servicesnet
    cap_add:
      - ALL
    ports:
      - "9500:27017"
    volumes:
      - "mongodb:/data/db"
    healthcheck: # Verifying that the Mongo service was started in the container
      test: CMD echo 'db.stats().ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 5s
      
  consul:
    image: consul
    container_name: consul
    hostname: consul
    restart: always
    networks:
      - servicesnet
    environment:
      - CONSUL_LOCAL_CONFIG={"disable_update_check":true}
    entrypoint:
      - consul
      - agent
      - -server
      - -bootstrap
      - -data-dir=/data
      - -bind={{ GetInterfaceIP "eth0" }}
      - -client=0.0.0.0
      - -ui
    volumes:
        - consul:/data
    ports:
        - 8500:8500 # protect this in the real world!
        
  registrator:
    container_name: registrator
    command: -internal consul://consul:8500
    privileged: true
    image: gliderlabs/registrator:latest
    restart: always
    links:
      - consul
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    networks:
      - servicesnet
      
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "9501:15672" #ui
      - "9502:5672"
    restart: always
    networks:
      - servicesnet
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test:
        - "CMD"
        - "rabbitmqctl"
        - "status"

  redis:
    image: redis:4-alpine
    container_name: redis
    hostname: redis
    ports:
      - "9503:6379"
    restart: always
    volumes:
      - "redis:/data"
    networks:
      - servicesnet
    healthcheck:
        test: ["CMD", "redis-cli","ping"]
        interval: 30s
        timeout: 10s
        retries: 3
        
  pact_broker:
    image: pactfoundation/pact-broker
    container_name: pact_broker
    hostname: pact_broker
    ports:
      - "9292:9292"
    restart: always
    environment:
      - PACT_BROKER_DATABASE_ADAPTER=sqlite
      - PACT_BROKER_DATABASE_NAME=pact_broker.sqlite
    networks:
      - servicesnet